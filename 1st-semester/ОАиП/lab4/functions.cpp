#include "header.h"											//поключение хэдера с необходимыми библиотеками	

int input_nat()												//функция ввода размерности массива
{
	int n = 0;												//размерность массива
	int k = 1;												//вспомогательная переменная для проверки на ввод целого числа

	do														//ввод размерности массива с проверкой на целое число
	{
		rewind(stdin);										//очистка буфера
		k = scanf_s("%d", &n);								

		if (!k || n <= 0) 
			printf("Должно быть введено натуральное число!\n");
	} while (!k || n <= 0);									//если введено не целое число, цикл повторяется
	printf("\n");

	return n;
}

int** allocate_memory(int n)								//функция выделения памяти для двумерного динамического массива размером n
{
	int** a;

	a = (int**)malloc(n * sizeof(int*));					//выделение памяти для двумерного массива
	if (a)
	{
		for (int i = 0; i < n; i++)
			*(a + i) = (int*)malloc(n * sizeof(int));		//выделение памяти для одномерных массивов
	}

	return a;												//возврат массива с выделенной памятью
}

void spiral(int** a, int n)									//функция заполнения массива по спирали
{

	int i = 0,												//счётчик цикла 
		x = 0,												//номер столбца матрицы
		y = -1,												//номер строки матрицы
		num = 0,											//очередное число, заполняющее матрицу
		dir = 1,											//направление движения внутри матрицы (вправо и вниз или влево и вверх)
		l = 0;												//расстояние до границы матрицы (или уже заполненного элемента)

	l = n;													//первоначальное расстояние равно длине стороны матрицы
	while (l > 0)											//цикл повторяется до тех пор, пока расстояние до уже заполненного элемента не будет равно 0
	{
		i = 0;
		while (i != l)										//движение вправо (влево после изменения направления)
		{	
			y += dir;										//перемещение на одну позицию вправо (влево)
			*(*(a + x) + y) = ++num;						//присваивание элементу матрицы значения очередного числа 
			i++;
		}

		l--;												//уменьшение расстояние до уже заполненного элемента

		i = 0;
		while (i != l)										//движение вниз (вверх после изменения направления)
		{
			x += dir;										//перемещение на одну позицию вниз (вверх)
			*(*(a + x) + y) = ++num;						//присваивание эл-ту матрицы значения очередного числа 
			i++;
		}

		dir *= -1;											//изменение направления
	}
}

void print_array(int** a, int n)							//функция вывода двумерного динамического массива размером n
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			printf("%4d ", *(*(a + i) + j));				//вывод a[i,j] 
		printf("\n");										//переход на новую строку
	}
}