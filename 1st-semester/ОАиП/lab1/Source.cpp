#define _USE_MATH_DEFINES														//макрос для использования точного значения числа Pi

#include <stdio.h>
#include <locale.h>
#include <math.h>
#include <stdlib.h>

int main()
{
	setlocale(LC_ALL, "Russian");

	const int n = 15;															//кол-во значений переменной x
	double x[n] = { 0 },														//входной массив со значениями x
	 	   y[n] = { 0 },														//массив для записи результатов
		   a = 0,																//вспомогательная переменная для записи члена ряда
		   eps = 0;																//точность вычислений (эпсилон)
	int	   i = 0,																//счётчик цикла
	  	   j = 0,																//счётчик цикла
		   k = 0;																//вспомогательная переменная для проверки на ввод числа

	for (i = 0; i < n; i++)
	{
		do																		//проверка на ввод целого числа
		{
			rewind(stdin);														//очистка буфера
			printf("Введите %d-ое значение переменной x: ",i+1);
			k = scanf_s("%lf", &x[i]);
		} while (!k);															//если введены символ или строка, то будет запрошен повторный ввод

	}

	for (i = 0; i < n; i++)
	{
		while (x[i] >= 2*M_PI)													//снятие периода 2*Pi для положительных
		{
			x[i] -= M_PI*2;
		}
		while (x[i] <= -2*M_PI)													//снятие периода 2*Pi для отрицательных
		{
			x[i] += M_PI*2;
		}
	}

	do																			//проверка на ввод целого числа
	{	
		rewind(stdin);															//очистка буфера
		printf("Введите эпсилон: ");
		k = scanf_s("%lf", &eps);												//ввод эпсилон
	} while (!k);																//если введены символ или строка, то будет запрошен повторный ввод
	
	for (i = 0; i < n; i++)										
	{
		y[i] = 1;																//первый член каждого числа всегда равен 1
		a = 1;													
		for (j = 0; j < 50; j++)												//вычисление 
		{
			double p = j;														//приведения int к double во избежание переполнения при выполнении арифм. операций
			a *= (-1 * pow(x[i], 2));											//умножение на -x^2
			a /= ((2 * p) + 1) * ((2 * p) + 2);									//(k+2)! = k!(k+1)(k+2), поэтому делим на два последующих числа
			if (fabs(a) > eps)													//сравниваем абсолютное значение члена ряда с заданным эпсилон
			{
				y[i] += a;														//прибавляем значение члена к ряду
			}
			else break;															//иначе переходим к вычислению ф-ции от следующего значения х
		}
	}

	for (i = 0; i < n; i++)
	{
		printf("\nx%d = %.10lf; \tcos x%d = %.10lf",i+1, x[i], i+1, y[i]);		//вывод 15-и значений косинусов
	}

	return 0;
}