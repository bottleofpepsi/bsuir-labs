#include "matrix.h"

int matrix::exeption(matrix mat2)								//метод проверки матриц на совместимость
{
	if (this->n != mat2.m)
	{
		cout << "ћатрицы несовместимы (число столбцов 1-ой и строк 2-ой не совпадают)!" << endl;
		return 0;
	}
	return 1;
}

matrix matrix::multiply(matrix mat2)							//метод умножени€ матриц
{
	int i = 0,
		j = 0,
		k = 0,
		m = this->m,											//кол-во строк новой матрицы Ч кол-во строк 1-ой матрицы
		n = mat2.n;												//кол-во столбцов новой матрицы Ч кол-во столбцов 2-ой матрицы

	matrix res(m, n);											//инициализаци€ новой матрицы

	for (i = 0; i < m; i++)										//умножение матриц
		for (j = 0; j < n; j++)
		{
			res.arr[i][j] = 0;
			for (k = 0; k < this->n; k++)
				res.arr[i][j] += this->arr[i][k] * mat2.arr[k][j];	//сумма произведений эл-тов столбца 1-ой матрицы на
		}															//соответствующие эл-ты строки 2-ой матрицы

	return res;
}

//matrix operator* (const matrix& mat1, const matrix& mat2)		//перегрузка оператора умножени€
//{																
//	int i = 0,
//		j = 0,
//		k = 0,
//		m = mat1.m,												//кол-во строк новой матрицы Ч кол-во строк 1-ой матрицы
//		n = mat2.n;												//кол-во столбцов новой матрицы Ч кол-во столбцов 2-ой матрицы
//
//	matrix res(m, n);											//инициализаци€ новой матрицы
//
//	for (i = 0; i < m; i++)										//умножение матриц
//		for (j = 0; j < n; j++)
//		{
//			res.arr[i][j] = 0;
//			for (k = 0; k < mat1.n; k++)
//				res.arr[i][j] += mat1.arr[i][k] * mat2.arr[k][j];	//сумма произведений эл-тов столбца 1-ой матрицы на
//		}															//соответствующие эл-ты строки 2-ой матрицы
//
//	return matrix(res);
//}

matrix matrix::operator* (const matrix& mat2)					//оператор умножени€ (метод класса)
{
	int i = 0,
		j = 0,
		k = 0,
		m = this->m,											//кол-во строк новой матрицы Ч кол-во строк 1-ой матрицы
		n = mat2.n;												//кол-во столбцов новой матрицы Ч кол-во столбцов 2-ой матрицы

	matrix res(m, n);											//инициализаци€ новой матрицы

	for (i = 0; i < m; i++)										//умножение матриц
		for (j = 0; j < n; j++)
		{
			res.arr[i][j] = 0;
			for (k = 0; k < this->n; k++)
				res.arr[i][j] += this->arr[i][k] * mat2.arr[k][j];	//сумма произведений эл-тов столбца 1-ой матрицы на
		}															//соответствующие эл-ты строки 2-ой матрицы

	return matrix(res);
}

void matrix::input()											//метод ввода эл-тов матрицы
{
	for (int i = 0; i < m; i++)
		for (int j = 0; j < n; j++)
			cin >> this->arr[i][j];								//ввод очередного элемента
}

void matrix::output()											//метод вывода эл-тов матрицы на экран
{
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < n; j++)
			cout << setiosflags(ios::left) << setw(4) << this->arr[i][j];	//вывод 
		cout << endl;														//переход на новую строку
	}
}